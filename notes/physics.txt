Ammo:
    https://github.com/kripken/ammo.js/
    https://medium.com/@bluemagnificent/intro-to-javascript-3d-physics-using-ammo-js-and-three-js-dd48df81f591
    https://medium.com/@bluemagnificent/moving-objects-in-javascript-3d-physics-using-ammo-js-and-three-js-6e39eff6d9e5
    https://medium.com/@bluemagnificent/collision-detection-in-javascript-3d-physics-using-ammo-js-and-three-js-31a5569291ef

Rapier:
    https://rapier.rs
    https://github.com/dimforge/rapier.js/issues/19
    https://www.npmjs.com/package/@dimforge/rapier3d
    https://www.rapier.rs/docs/user_guides/javascript/getting_started/

Cannon:
    https://schteppe.github.io/cannon.js/
    https://github.com/schteppe/cannon.js/blob/master/examples/worker.html

PhysxJs:
    https://github.com/ashconnell/physx-js

Oimo:
    http://lo-th.github.io/Oimo.js/#basic
    https://github.com/lo-th/Oimo.js/

2D:
    https://brm.io/matter-js/

Babylon: uses plugins for Cannon.js, Oimo.js, or Ammo.js

Rapier.js
    Want to use Rapier.js, but it's a difficult dependency to vender since it's split into many files.
    I tried building it myself following the github workflow for macos, but get these errors:
        npm ERR! command sh -c node bin/index.js
        npm ERR! Error: Error: This platform not supported
        ...
        error: failed to download `nalgebra-macros v0.1.0`
        ...
        feature `resolver` is required
        this Cargo does not support nightly features, but if you
        switch to nightly channel you can add
        `cargo-features = ["resolver"]` to enable this feature
        ...
        ./build_typescript.sh: line 2: pkg/raw.ts: No such file or directory
        ...
        Error: Tried to set an option (inputFiles) that was not declared.
    Options:
        1. Write my own physics and/or collision detection
            Do I need advanced physics for Sprigheim?
                Yes. Falling trees
                No. Character and enemy movement
                Yes? Carts and hills
                Yes? harpoon
        2. Bite the bullet, take on NPM and a bundler
        3. Create a dummy project w/ NPM to bundle dependencies