TO LEARN: "physically correct specular BRDFs"

Outdoor lighting in realtime demo scenes:
    https://www.iquilezles.org/www/articles/outdoorslighting/outdoorslighting.htm

Compute shader slime mold webgl:
  https://greggman.github.io/doodles/slime/slime.html

Redblob on grass:
  https://www.redblobgames.com/x/2108-grass-shader/

Flat shading in PlayCanvas:
  https://omar-shehata.medium.com/flat-shading-in-webgl-with-playcanvas-a-quick-tip-97d1bd85258f

Flat shading:
  "Provoking vertex" https://www.khronos.org/opengl/wiki/Primitive#Provoking_vertex
  "flat" interpolation qualifier https://www.khronos.org/opengl/wiki/Type_Qualifier_(GLSL)#Interpolation_qualifiers
  waiting on interplate(flat) support in Chrome's Tint WGSL parser:
    https://bugs.chromium.org/p/tint/issues/detail?id=746&q=interpolate&can=2
  https://gamedev.stackexchange.com/questions/154854/how-do-i-implement-flat-shading-in-glsl
    vec3 xTangent = dFdx( viewPosition );
    vec3 yTangent = dFdy( viewPosition );
    vec3 faceNormal = normalize( cross( xTangent, yTangent ) );

"Geometry shaders":
  " are for creating new geometry on the fly. It's taking geometry of one type as input, and then 
  emitting a different number of the same, or another type of geoAmetry as output. You could have 
  points transformed to a series of triangles or quads."
    https://www.reddit.com/r/vulkan/comments/c9ws13/do_we_need_geometry_shader_anymore/
  http://www.joshbarczak.com/blog/?p=667 (they are slow)

  Maybe also a way of doing per-face data?
  https://docs.microsoft.com/en-us/previous-versions//bb205146(v=vs.85)?redirectedfrom=MSDN

  Don't use GS: https://twitter.com/pointinpolygon/status/1270695113967181827

"Mesh shaders":
  https://devblogs.microsoft.com/directx/dev-preview-of-new-directx-12-features/#directx-mesh-shader
  https://developer.nvidia.com/blog/introduction-turing-mesh-shaders/


Shaders Wow:
    Slime and ants: https://www.youtube.com/watch?v=X-iSQQgOd1A
    https://www.shadertoy.com

Game shaders for beginners:
  https://news.ycombinator.com/item?id=19895218
  https://github.com/lettier/3d-game-shaders-for-beginners
  https://www.youtube.com/watch?v=kfM-yu0iQBk

Ben Cloward on shaders:
  Shaders in Anthem:
    https://www.youtube.com/watch?v=IjQWRjWZGn0
  https://www.youtube.com/user/bcloward/videos?view=0&sort=p&flow=grid

Computer shader pathfinding:
  https://www.youtube.com/watch?v=1OSXWhd3hvI

TO LEARN COMPUTE SHADERS:
    Limitations ?
    From JS / WASM ?
    What can it be used for?
        Physics?
        Algorithms?
        Celular atomita?
        Procedural gen?
    101:
      https://news.ycombinator.com/item?id=27396634
      https://www.youtube.com/watch?v=DZRn_jNZjbw

Book of Shaders (online):
  https://thebookofshaders.com
  https://twitter.com/patriciogv

"Shader god" (says Max):
  https://www.shadertoy.com/user/iq
  https://www.iquilezles.org/www/articles/voxellines/voxellines.htm

Compute shader tutorial ($400?):
  https://paprika.studio/workshops/compute/

Shader School:
  https://github.com/stackgl/shader-school

SDFs (Signed Distance Field) ?
    https://joyrok.com/What-Are-SDFs-Anyway